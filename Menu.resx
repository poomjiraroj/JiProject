<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>